name: Create GitHub Release

on:
  push:
    branches:
      - master

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create GitHub Release
        id: release
        if: github.event_name == 'push' || github.event.pull_request.merged == true
        uses: heitorpolidoro/auto-release@master
        with:
          update_released_versions: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/heitorpolidoro/autocreate-pr
          VERIONS=${{ steps.release.outputs.versions }}
          TAGS=""
          for VERSION in $VERSIONS
          do
            echo "${DOCKER_IMAGE}:${VERSION}"
            TAGS="${TAGS},${DOCKER_IMAGE}:${VERSION}"
          done
          echo ::set-output name=tags::${TAG}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          #          context: ./app
          #          file: ./app/Dockerfile
          #          target: prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max